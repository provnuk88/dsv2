/**
 * –ú–æ–¥—É–ª—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è Synergy Guild Bot
 * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ—Ñ–∏–ª—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */

const { WebhookClient } = require('discord.js');
const AdminLog = require('../database/models/AdminLog');
const logger = require('./logger');

/**
 * –õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª Discord
 * @param {Object} client - –ö–ª–∏–µ–Ω—Ç Discord
 * @param {Object} user - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Discord
 * @param {Array} changedFields - –ú–∞—Å—Å–∏–≤ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π
 * @returns {Promise<void>}
 */
async function logProfileChange(client, user, changedFields) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤
    const logChannelId = process.env.LOG_CHANNEL_ID;
    if (!logChannelId) {
      logger.warn('ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤
    const logChannel = await client.channels.fetch(logChannelId);
    if (!logChannel) {
      logger.warn(`–ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ —Å ID ${logChannelId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const changedFieldsText = changedFields.join(', ');
    const logMessage = `üë§ **${user.tag}** (${user.id}) –æ–±–Ω–æ–≤–∏–ª –ø—Ä–æ—Ñ–∏–ª—å: ${changedFieldsText}`;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
    await logChannel.send(logMessage);
    
    logger.info(`–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.tag} (${user.id}) –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–æ`);
  } catch (error) {
    logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ${error.message}`);
  }
}

/**
 * –õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
 * @param {string} adminId - ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 * @param {string} adminUsername - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 * @param {string} action - –î–µ–π—Å—Ç–≤–∏–µ
 * @param {string} details - –î–µ—Ç–∞–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è
 * @param {string} targetId - ID —Ü–µ–ª–µ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
 * @param {string} targetType - –¢–∏–ø —Ü–µ–ª–µ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
 * @returns {Promise<void>}
 */
async function logAdminAction(adminId, adminUsername, action, details, targetId, targetType) {
  try {
    const adminLog = new AdminLog({
      adminId,
      adminUsername,
      action,
      details,
      targetId,
      targetType
    });
    
    await adminLog.save();
    
    logger.info(`–î–µ–π—Å—Ç–≤–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${adminUsername} (${adminId}) –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–æ`);
  } catch (error) {
    logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${error.message}`);
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥–∏ —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @returns {Promise<void>}
 */
async function sendWebhookLog(message) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ –≤–µ–±—Ö—É–∫
    const webhookUrl = process.env.LOG_WEBHOOK_URL;
    if (!webhookUrl) {
      return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –≤–µ–±—Ö—É–∫–∞
    const webhookClient = new WebhookClient({ url: webhookUrl });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await webhookClient.send({
      content: message,
      username: 'Synergy Bot Logs'
    });
    
    logger.info('–õ–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫');
  } catch (error) {
    logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–æ–≥–∞ —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫: ${error.message}`);
  }
}

module.exports = {
  logProfileChange,
  logAdminAction,
  sendWebhookLog
};
