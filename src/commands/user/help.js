const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const logger = require('../../utils/logger');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('help')
        .setDescription('–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ'),
    
    async execute(interaction) {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
            const commands = interaction.client.commands;
            
            // –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥
            const helpEmbed = new EmbedBuilder()
                .setColor(0x0099FF)
                .setTitle('–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º Synergy Bot')
                .setDescription('–ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ.')
                .setFooter({ text: 'Synergy Guild Bot' })
                .setTimestamp();
            
            // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            const userCommands = [];
            const adminCommands = [];
            
            // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≥—Ä—É–ø–ø—ã
            commands.forEach(command => {
                const commandPath = command.data.name;
                
                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–æ–º–∞–Ω–¥—ã –ø–æ –ø—É—Ç–∏ —Ñ–∞–π–ª–∞ –∏–ª–∏ –¥—Ä—É–≥–∏–º –ø—Ä–∏–∑–Ω–∞–∫–∞–º
                if (commandPath.includes('admin')) {
                    adminCommands.push(command);
                } else {
                    userCommands.push(command);
                }
            });
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —ç–º–±–µ–¥
            if (userCommands.length > 0) {
                let userCommandsText = '';
                
                userCommands.forEach(command => {
                    userCommandsText += `**/${command.data.name}** - ${command.data.description}\n`;
                    
                    // –ï—Å–ª–∏ —É –∫–æ–º–∞–Ω–¥—ã –µ—Å—Ç—å –ø–æ–¥–∫–æ–º–∞–Ω–¥—ã, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö
                    if (command.data.options && command.data.options.length > 0) {
                        command.data.options.forEach(option => {
                            if (option.type === 1) { // –¢–∏–ø 1 - –ø–æ–¥–∫–æ–º–∞–Ω–¥–∞
                                userCommandsText += `  ‚Ä¢ **/${command.data.name} ${option.name}** - ${option.description}\n`;
                            }
                        });
                    }
                });
                
                helpEmbed.addFields({ name: 'üìù –ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', value: userCommandsText });
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —ç–º–±–µ–¥, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            if (adminCommands.length > 0 && interaction.member.permissions.has('ADMINISTRATOR')) {
                let adminCommandsText = '';
                
                adminCommands.forEach(command => {
                    adminCommandsText += `**/${command.data.name}** - ${command.data.description}\n`;
                    
                    // –ï—Å–ª–∏ —É –∫–æ–º–∞–Ω–¥—ã –µ—Å—Ç—å –ø–æ–¥–∫–æ–º–∞–Ω–¥—ã, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö
                    if (command.data.options && command.data.options.length > 0) {
                        command.data.options.forEach(option => {
                            if (option.type === 1) { // –¢–∏–ø 1 - –ø–æ–¥–∫–æ–º–∞–Ω–¥–∞
                                adminCommandsText += `  ‚Ä¢ **/${command.data.name} ${option.name}** - ${option.description}\n`;
                            }
                        });
                    }
                });
                
                helpEmbed.addFields({ name: 'üîß –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', value: adminCommandsText });
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö
            helpEmbed.addFields({
                name: 'üîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                value: '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–µ —Å —Ñ–ª–∞–≥–æ–º `--help` –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≥–∏–ª—å–¥–∏–∏.'
            });
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–±–µ–¥
            await interaction.reply({
                embeds: [helpEmbed],
                ephemeral: true
            });
            
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã help: ${error.message}`);
            await interaction.reply({
                content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø—Ä–∞–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
                ephemeral: true
            });
        }
    }
};
