const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const os = require('os');
const { version } = require('../../../package.json');
const mongoose = require('mongoose');
const logger = require('../../utils/logger');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('status')
        .setDescription('–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –∏ —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é'),
    
    async execute(interaction) {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
            const uptime = this.formatUptime(process.uptime());
            const memoryUsage = process.memoryUsage();
            const freeMemory = os.freemem();
            const totalMemory = os.totalmem();
            const memoryUsagePercent = ((totalMemory - freeMemory) / totalMemory * 100).toFixed(2);
            
            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            const dbStatus = mongoose.connection.readyState === 1 ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ' : '–û—Ç–∫–ª—é—á–µ–Ω–æ';
            
            // –°–æ–∑–¥–∞–µ–º —ç–º–±–µ–¥ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
            const statusEmbed = new EmbedBuilder()
                .setColor(0x00FF00)
                .setTitle('–°—Ç–∞—Ç—É—Å Synergy Bot')
                .addFields(
                    { name: 'ü§ñ –í–µ—Ä—Å–∏—è –±–æ—Ç–∞', value: version, inline: true },
                    { name: '‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã', value: uptime, inline: true },
                    { name: 'üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏', value: `${this.formatBytes(memoryUsage.rss)} (${memoryUsagePercent}%)`, inline: true },
                    { name: 'üì° –°—Ç–∞—Ç—É—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö', value: dbStatus, inline: true },
                    { name: 'üñ•Ô∏è –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞', value: `${os.type()} ${os.release()}`, inline: true },
                    { name: 'üìù Node.js', value: process.version, inline: true }
                )
                .setFooter({ text: 'Synergy Guild Bot' })
                .setTimestamp();
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–±–µ–¥
            await interaction.reply({
                embeds: [statusEmbed],
                ephemeral: true
            });
            
        } catch (error) {
            logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã status: ${error.message}`);
            await interaction.reply({
                content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
                ephemeral: true
            });
        }
    },
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã
    formatUptime(seconds) {
        const days = Math.floor(seconds / (3600 * 24));
        const hours = Math.floor((seconds % (3600 * 24)) / 3600);
        const minutes = Math.floor((seconds % 3600) / 60);
        const secs = Math.floor(seconds % 60);
        
        let result = '';
        
        if (days > 0) result += `${days} –¥ `;
        if (hours > 0) result += `${hours} —á `;
        if (minutes > 0) result += `${minutes} –º `;
        if (secs > 0 || result === '') result += `${secs} —Å`;
        
        return result.trim();
    },
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –≤ –±–∞–π—Ç–∞—Ö
    formatBytes(bytes) {
        if (bytes === 0) return '0 –ë–∞–π—Ç';
        
        const k = 1024;
        const sizes = ['–ë–∞–π—Ç', '–ö–ë', '–ú–ë', '–ì–ë', '–¢–ë'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }
};
